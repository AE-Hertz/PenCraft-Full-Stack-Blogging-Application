// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id       String   @id @default(uuid()) //making uuid to protect from collison and also made it string
  email    String   @unique
  name     String?
  password String
  posts    Post[]
  bookmark  Bookmark[]
}
// Here we are making  one to many realtionship.
model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  bookmarks Bookmark[]
  // images    Image[]
} 
// Schema for image upload and we  have added it's  relationship with posts.
// model Image {
//   id      String     @id @default(uuid())
//   url     String
//   post    Post        @relation(fields: [postId], references: [id])
//   postId  String
// }

// Schema for bookmark
model Bookmark {
  id      String   @id @default(uuid())
  post    Post     @relation(fields: [postId], references: [id])
  postId String
  user    User     @relation(fields: [userId], references: [id] )
  userId  String
}